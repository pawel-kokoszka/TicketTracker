@using TicketTracker.Application.Tickets.Commands.CreateTicket
@using TicketTracker.Application.Tickets;

@model CreateTicketCommand

@{
    ViewData["Title"] = "Create";
}



<h3>Create New Ticket</h3>

<hr />

<div class="row">
    <div class="col-md-4">
        <form action="/TicketTracker/Create" method="post">
            
            <div class="form-floating mb-3">
                <textarea class="form-control" style="height: 100px" asp-for="ShortDescription"></textarea>
                <label asp-for="ShortDescription">ShortDescription</label>
                <span asp-validation-for="ShortDescription" class="text-danger"></span>
            </div>
            
            <div class="form-floating mb-3">
                <textarea class="form-control" style="height: 100px" asp-for="Description"></textarea>
                <label asp-for="Description">Description</label>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <select class="form-select" id="ProjectConfigurationId" name="ProjectConfigurationId">

                    @foreach (var projConf in ViewData["projectConfigurations"] as IEnumerable<ProjectConfigurationDto>)
                    {
                        <option value="@projConf.Id">@projConf.ProjectName | Environment type: @projConf.EnvironmentType
                                                | Name: @projConf.EnvironmentName
                        </option>
                    }



                </select>
                <label for="ProjectConfigurationId">Project and Environment: </label>
            </div>

            <div class="form-floating mb-3">
                <select class="form-select" id="TypeId" name="TypeId" >
                    
                        @foreach (var prio in ViewData["ticketTypeDtos"] as IEnumerable<TicketTypeDto>)
                        {
                            <option value="@prio.Id">@prio.TypeName</option>
                        }
                    
                    
                    
                </select>
                <label for="TypeId">Ticket type: </label>
            </div>

            <div class="form-floating mb-3">
                <select class="form-select" id="PriorityId" name="PriorityId" >
                    @foreach (var prio in ViewData["ticketPrioritieDtos"] as IEnumerable<TicketPriorityDto>)
                        {
                            <option value="@prio.Id">@prio.PriorityValue</option>
                        }
                </select>
                <label for="PriorityId">Priority Level: </label>
            </div>

            <div class="form-group mb-3">
                <input class="btn btn-primary" type="submit" value="Create">
            </div>

        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}